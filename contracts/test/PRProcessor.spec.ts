import { ethers } from "hardhat"
import { convertPRClosedProofFromStr } from "./utils";
import { loadFixture } from "@nomicfoundation/hardhat-toolbox-viem/network-helpers";

describe("PRProcessor", () => {
  let owner;
  let attacker;

  const deploy = async () => {
    const [,,agent] = await ethers.getSigners();
    const ManagedKeyHashAdapterV2 = await ethers.getContractFactory("ManagedKeyHashAdapterV2");
    const PRProcessor = await ethers.getContractFactory("PRProcessor");

    const mailServerKayHashAdapter = await ManagedKeyHashAdapterV2.deploy([]);
    const prProcessor = await PRProcessor.deploy(agent.address, mailServerKayHashAdapter.getAddress(), "notifications@github.com");

    return { mailServerKayHashAdapter, prProcessor, agent}
  }

  before(async () => {
    [owner, attacker] = await ethers.getSigners();
  })

  it("should submit valid proof", async () => {
    const { prProcessor, agent } = await loadFixture(deploy);

    const proof = convertPRClosedProofFromStr(
      ["0x2f52011e0bf97c946f1eab937403d54a3fece1dc04e30a6d6c355c153d9de516", "0x28f214f034448ad77eff366888ace9e636a86d099632386bd5ffabe83865ef73"],
      [
        [
          "0x11065bfff6fecd967d4034bea16a9b520c106707667f77bfade9b25f2241b209",
          "0x09eab60ceb7276b83ff0147cdaf4f43bc2bd51abccce4dc7d37d341c3c095c69"
        ],
        [
          "0x2459fde39c94d6c0f46e0c6a5a153c7894528c1bafd46777bc0ce13a21a3841e",
          "0x09290638e276c068e8026f5cea32f250e4b8a8689a330ca15bfc54ef7b096067"
        ],
      ],
      ["0x0ff5995544db3495e001f836f743145e8bb94eb8128500f738b93ae128834ffb", "0x14e98bd7ccdcb05a50a47821dded22817518739ff645d5f291dc174d479eac06"],
      [
        "0x0000000000000000000000000000000000000000000000000063696669746f6e",
        "0x0000000000000000000000000000000000000000000000000040736e6f697461",
        "0x000000000000000000000000000000000000000000000000002e627568746967",
        "0x00000000000000000000000000000000000000000000000000000000006d6f63",
        "0x0000000000000000000000000000000000000000000000000077686e6974736a",
        "0x000000000000000000000000000000000000000000000000006172672d6b7a2f",
        "0x00000000000000000000000000000000000000000000000000747365742d746e",
        "0x0000000000000000000000000000000000000000000000000000000000676e69",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x00000000000000000000000000000000000000000000000000363438796e6f74",
        "0x0000000000000000000000000000000000000000000000000069616d67403230",
        "0x0000000000000000000000000000000000000000000000000000006d6f632e6c",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x0000000000000000000000000000000000000000000000000000000000003631"
      ]
    )

    const ret = await (prProcessor.connect(agent) as any).processProof(proof);
    console.log(ret)
  });

})